// <auto-generated />
using System;
using MagicVilla_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231221041101_ModelNumeroVilla")]
    partial class ModelNumeroVilla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Models.NumeroVilla", b =>
                {
                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVilla")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.HasIndex("IdVilla");

                    b.ToTable("NumeroVillas");
                });

            modelBuilder.Entity("MagicVilla_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetrosCuadrados")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenidades = "Alberca, Jacuzzi, Cocina, Sala, Comedor, 2 Recamaras, 2 Baños",
                            Detalles = "Villa",
                            FechaCreacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3094),
                            FechaModificacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3109),
                            ImagenURL = "https://www.villas.com.mx/wp-content/uploads/2019/10/1-1.jpg",
                            MetrosCuadrados = 100,
                            Nombre = "Villa 1",
                            Ocupantes = 4,
                            Tarifa = 1000.0
                        },
                        new
                        {
                            Id = 2,
                            Amenidades = "Alberca, Jacuzzi, Cocina, Sala, Comedor, 3 Recamaras, 3 Baños",
                            Detalles = "Villa",
                            FechaCreacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3183),
                            FechaModificacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3185),
                            ImagenURL = "https://www.villas.com.mx/wp-content/uploads/2019/10/2-1.jpg",
                            MetrosCuadrados = 200,
                            Nombre = "Villa 2",
                            Ocupantes = 6,
                            Tarifa = 2000.0
                        },
                        new
                        {
                            Id = 3,
                            Amenidades = "Alberca, Jacuzzi, Cocina, Sala, Comedor, 4 Recamaras, 4 Baños",
                            Detalles = "Villa",
                            FechaCreacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3190),
                            FechaModificacion = new DateTime(2023, 12, 20, 23, 11, 1, 462, DateTimeKind.Local).AddTicks(3191),
                            ImagenURL = "https://www.villas.com.mx/wp-content/uploads/2019/10/3-1.jpg",
                            MetrosCuadrados = 300,
                            Nombre = "Villa 3",
                            Ocupantes = 8,
                            Tarifa = 3000.0
                        });
                });

            modelBuilder.Entity("MagicVilla_API.Models.NumeroVilla", b =>
                {
                    b.HasOne("MagicVilla_API.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("IdVilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
